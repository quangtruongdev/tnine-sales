@model IEnumerable<tnine.Web.Host.Models.ProductViewModel>
@{
    ViewData["Title"] = "Danh sách sản phẩm";
    int totalCount = ViewBag.TotalCount ?? 0;
    int pageIndex = ViewBag.PageIndex ?? 1;
    int pageSize = ViewBag.PageSize ?? 10;
    int totalPages = ViewBag.TotalPages ?? (int)Math.Ceiling((double)totalCount / pageSize);
}

<!-- Header -->
<header class="bg-light py-3">
    <div class="container d-flex justify-content-between align-items-center">
        <a href="@Url.Action("Index", "Product")" class="text-primary text-decoration-none">
            <h1 class="h3 mb-0">TineSale</h1>
        </a>
        <form action="@Url.Action("Search", "Product")" method="get" class="input-group w-50">
            <input type="text" name="searchTerm" class="form-control"
                   placeholder="Tìm sản phẩm..." aria-label="Tìm sản phẩm"
                   value="@ViewBag.SearchTerm">
            <button class="btn btn-primary" type="submit">
                <i class="fa-solid fa-magnifying-glass"></i>
            </button>
        </form>

        <a href="@Url.Action("Cart", "Product")" class="btn btn-primary">
            <i class="fa-solid fa-cart-shopping"></i>
            Cart
        </a>
    </div>
</header>

<!-- Content -->
<div class="container mt-5">
    <!-- Danh sách sản phẩm -->
    <div class="row row-cols-1 row-cols-md-3 row-cols-lg-4 g-4">
        @if (Model.Any())
        {
            foreach (var product in Model)
            {
                <div class="col">
                    <div class="card shadow-sm border-light rounded">
                        <div class="card-img-top" style="background-image: url('@Url.Content("/wwwroot/" + product.ImgUrl)');"></div>
                        <div class="card-body">
                            <h5 class="card-title text-truncate" title="@product.Name">@product.Name</h5>
                            <p class="card-text text-muted text-truncate" title="@product.Description">@product.Description</p>
                            <p class="card-text"><strong>Giá:</strong> @product.Price.ToString("C")</p>
                            <a href="@Url.Action("Details", "Product", new { id = product.Id })" class="btn btn-primary w-100">Xem chi tiết</a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <p class="text-center text-muted">Không có sản phẩm nào được tìm thấy.</p>
            </div>
        }
    </div>
    <!-- Phân trang -->
    @if (totalPages > 1)
    {
        <nav aria-label="Pagination" class="mt-4">
            <ul class="pagination justify-content-center gap-2">
                @if (pageIndex > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", "Product", new { pageIndex = pageIndex - 1, pageSize = pageSize })">Trước</a>
                    </li>
                }

                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == pageIndex ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", "Product", new { pageIndex = i, pageSize = pageSize })">@i</a>
                    </li>
                }

                @if (pageIndex < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", "Product", new { pageIndex = pageIndex + 1, pageSize = pageSize })">Tiếp</a>
                    </li>
                }
            </ul>
        </nav>
    }

</div>

<script>
    function changePageSize(pageSize) {
        const url = new URL(window.location.href);
        url.searchParams.set('pageSize', pageSize);
        url.searchParams.set('pageIndex', 1); // Reset về trang đầu tiên
        window.location.href = url.toString();
    }
</script>

<style>
    .card-img-top {
        height: 180px;
        background-size: contain;
        background-position: top center;
        background-repeat: no-repeat;
        border-top-left-radius: 0.25rem;
        border-top-right-radius: 0.25rem;
    }

    .card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: translateY(-8px);
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);
        }

    .card-title {
        font-size: 1.1rem;
        font-weight: bold;
        color: #333;
    }

    .card-text {
        font-size: 0.9rem;
        color: #555;
    }

    <style >
    .input-group .form-control {
        height: 45px;
        border-right: none;
        box-shadow: none;
    }

    .input-group .form-control:focus {
        border-color: #007bff;
        outline: none;
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
    }

    .input-group .btn-primary {
        height: 45px;
        border-left: none;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .input-group .btn-primary:hover {
            background-color: #0056b3;
        }

    .input-group i {
        font-size: 1.2rem;
    }
</style>
