@model tnine.Web.Host.Models.ProductDetailViewModel


@{
    ViewData["Title"] = "Chi tiết sản phẩm";
}
<header class="bg-light py-3">
    <div class="container d-flex justify-content-between align-items-center">
        <a href="@Url.Action("Index", "Product")" class="text-primary text-decoration-none">
            <h1 class="h3 mb-0">TineSale</h1>
        </a>
        <a href="@Url.Action("Cart", "Product")" class="btn btn-primary">
            <i class="fa-solid fa-cart-shopping"></i>
            Cart
        </a>
    </div>
</header>
<div class="container mt-5">
    <div class="row align-items-center">
        <!-- Hình ảnh sản phẩm -->
        <div class="col-md-6 text-center">
            <img src="@Url.Content("/wwwroot/" + Model.ProductViewModel.ImgUrl)" class="img-fluid rounded shadow product-image" alt="@Model.ProductViewModel.Name">
        </div>

        <!-- Thông tin sản phẩm -->
        <div class="col-md-6">
            <h2 class="mb-4 text-primary fw-bold">@Model.ProductViewModel.Name</h2>
            <h5 class="text-primary"><strong>Danh mục:</strong> @Model.ProductViewModel.CategoryName</h5>
            <p class="text-muted"><strong>Giới thiệu:</strong> @Model.ProductViewModel.Description</p>
            <p class="text-danger fw-bold"><strong>Giá:</strong> @Model.ProductViewModel.Price.ToString("C")</p>

            <!-- Lựa chọn màu sắc -->
            <div class="form-group mb-4">
                <label class="form-label"><strong>Màu sắc:</strong></label><br />
                @foreach (var productVari in Model.productVariationViewModels)
                {
                    <div class="form-check form-check-inline" style="align-items: center;">
                        <input class="form-check-input" type="radio" name="color" id="color-@productVari.ColorName" value="@productVari.ColorName">
                        <label class="form-check-label" for="color-@productVari.ColorName" style="display: flex; align-items: center; cursor: pointer;">
                            <span class="color-circle" style="background-color: @productVari.ColorName;"></span>
                            <span>@productVari.ColorName</span>
                        </label>
                    </div>
                }
            </div>


            <!-- Lựa chọn kích cỡ -->
            <div class="form-group mb-4">
                <label class="form-label"><strong>Kích cỡ:</strong></label><br />
                @foreach (var productVari in Model.productVariationViewModels)
                {
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="size" id="size-@productVari.SizeName" value="@productVari.SizeName">
                        <label class="form-check-label" for="size-@productVari.SizeName">@productVari.SizeName</label>
                    </div>
                }
            </div>


            <!-- Số lượng sản phẩm -->
            @*<div class="form-group mb-4">
            <label class="form-label"><strong>Số lượng:</strong></label><br />
            <div class="d-inline-flex align-items-center qty-group">
                <button class="btn btn-outline-secondary qty-btn" id="decreaseQty">
                    <b>-</b>
                </button>
                <input type="number" id="quantity" value="0" min="0" class="form-control text-center qty-input mx-2" />
                <button class="btn btn-outline-secondary qty-btn" id="increaseQty">
                    <b>+</b>
                </button>
            </div>
        </div>*@

            <div class="form-group mb-4">
                <label class="form-label"><strong>Số lượng:</strong></label><br />
                <div class="d-inline-flex align-items-center qty-group">
                    <button class="btn btn-outline-secondary qty-btn" id="decreaseQty">
                        <b>-</b>
                    </button>
                    <input type="number" id="quantity" value="0" min="0" class="form-control text-center qty-input mx-2" />
                    <button class="btn btn-outline-secondary qty-btn" id="increaseQty">
                        <b>+</b>
                    </button>
                </div>
            </div>


            <!-- Số lượng hiện có-->
            <div class="form-group mb-4">
                <label class="form-label"><strong>Số lượng hiện có:</strong></label><br />
                <span id="available-quantity" class="text-success fw-bold">0</span>

                <!-- Thông báo hết hàng -->
                <div id="out-of-stock-message" class="text-danger mt-2" style="display: none;">
                    <strong>Sản phẩm này đã hết hàng hoặc chưa có sản phẩm!</strong>
                </div>
            </div>

            <!-- Nút thêm vào giỏ hàng -->
            <button class="btn btn-primary btn-lg w-100 mt-3" onclick="addToCart(@Model.ProductViewModel.Id)">
                <i class="bi bi-cart-plus"></i> Thêm vào giỏ hàng
            </button>
        </div>
    </div>
</div>

<style>
    /* Căn chỉnh hình ảnh và thông tin */
    .product-image {
        max-height: 400px;
        object-fit: cover;
        border: 1px solid #ddd;
        margin: 0 auto;
    }

    .container .row {
        display: flex;
        flex-wrap: wrap;
    }

    /* Căn giữa nội dung trong cột */
    .row .col-md-6 {
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    /* Phong cách màu sắc */
    .color-circle {
        display: inline-block;
        width: 20px;
        height: 20px;
        margin-right: 8px;
        border-radius: 50%;
        border: 1px solid #ccc;
    }

    /* Nút chỉnh số lượng */
    #quantity {
        max-width: 60px;
    }

    /* Căn chỉnh nút và input thẳng hàng */
    .qty-group {
        display: inline-flex;
        align-items: center;
    }

    .qty-btn {
        width: 40px;
        height: 40px;
        text-align: center;
        padding: 0;
        font-size: 16px;
    }

    .qty-input {
        max-width: 60px;
        height: 40px;
        font-size: 16px;
        margin: 0 8px;
        text-align: center;
    }



    /* Nút thêm vào giỏ hàng */
    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
    }

        .btn-success:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }

    /* Hiệu ứng nút */
    .btn {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .btn:hover {
            transform: scale(1.05);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
        }
</style>



<script>
       function addToCart(productId) {
       const selectedColor = document.querySelector('input[name="color"]:checked');
           const selectedSize = document.querySelector('input[name="size"]:checked');
           const qtyInput = document.getElementById('quantity');
       const quantity = parseInt(qtyInput.value);

       if (!selectedColor || !selectedSize) {
           alert('Vui lòng chọn màu sắc và kích cỡ!');
           return;
       }

       const product = {
           id: productId,
           name: "@Model.ProductViewModel.Name",
           price: "@Model.ProductViewModel.Price",
           color: selectedColor.value,
           size: selectedSize.value,
           quantity: quantity,
           imgUrl: "@Model.ProductViewModel.ImgUrl"
       };

       const cart = JSON.parse(localStorage.getItem('cart')) || [];
       cart.push(product);
       localStorage.setItem('cart', JSON.stringify(cart));

       alert('Sản phẩm đã được thêm vào giỏ hàng!');
   }
document.addEventListener('DOMContentLoaded', function () {
    const colorInputs = document.querySelectorAll('input[name="color"]');
    const sizeInputs = document.querySelectorAll('input[name="size"]');
    const availableQuantityElement = document.getElementById('available-quantity');
    const outOfStockMessage = document.getElementById('out-of-stock-message');
    const qtyInput = document.getElementById('quantity');
    const increaseBtn = document.getElementById('increaseQty');
    const decreaseBtn = document.getElementById('decreaseQty');
    const addToCartBtn = document.getElementById('addToCartBtn');

    // Lấy danh sách product variations từ ViewModel
    const productVariations = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.productVariationViewModels));

    function updateAvailableQuantity() {
        const selectedColor = document.querySelector('input[name="color"]:checked');
        const selectedSize = document.querySelector('input[name="size"]:checked');

        qtyInput.value = 0;

        if (selectedColor && selectedSize) {
            const selectedVariation = productVariations.find(vari =>
                vari.ColorName === selectedColor.value &&
                vari.SizeName === selectedSize.value
            );

            if (selectedVariation) {
                availableQuantityElement.textContent = selectedVariation.Quantity;
                qtyInput.max = selectedVariation.Quantity;

                if (selectedVariation.Quantity <= 0) {
                    increaseBtn.disabled = true;
                    outOfStockMessage.style.display = 'block';
                } else {
                    increaseBtn.disabled = false;
                    outOfStockMessage.style.display = 'none';
                }
            } else {
                availableQuantityElement.textContent = "0";
                qtyInput.max = 0;
                increaseBtn.disabled = true;
                outOfStockMessage.style.display = 'block';
            }
        } else {
            availableQuantityElement.textContent = "0";
            qtyInput.max = 0;
            increaseBtn.disabled = true;
            outOfStockMessage.style.display = 'block';
        }

        toggleAddToCartButton();
    }

    function toggleAddToCartButton() {
        const quantity = parseInt(qtyInput.value);
        if (quantity === 0 || isNaN(quantity)) {
            addToCartBtn.disabled = true;
        } else {
            addToCartBtn.disabled = false;
        }
    }

    colorInputs.forEach(input => {
        input.addEventListener('change', updateAvailableQuantity);
    });

    sizeInputs.forEach(input => {
        input.addEventListener('change', updateAvailableQuantity);
    });

    increaseBtn.addEventListener('click', function () {
        let currentQty = parseInt(qtyInput.value);
        const maxQty = parseInt(qtyInput.max);
        if (currentQty < maxQty) {
            qtyInput.value = currentQty + 1;
        }
        toggleAddToCartButton();
    });

    decreaseBtn.addEventListener('click', function () {
        let currentQty = parseInt(qtyInput.value);
        if (currentQty > 0) {
            qtyInput.value = currentQty - 1;
        }
        toggleAddToCartButton();
    });

    qtyInput.addEventListener('input', toggleAddToCartButton);

    @*function addToCart(productId) {
        const selectedColor = document.querySelector('input[name="color"]:checked');
        const selectedSize = document.querySelector('input[name="size"]:checked');
        const quantity = parseInt(qtyInput.value);

        if (!selectedColor || !selectedSize) {
            alert('Vui lòng chọn màu sắc và kích cỡ!');
            return;
        }

        const product = {
            id: productId,
            name: "@Model.ProductViewModel.Name",
            price: "@Model.ProductViewModel.Price",
            color: selectedColor.value,
            size: selectedSize.value,
            quantity: quantity
        };

        const cart = JSON.parse(localStorage.getItem('cart')) || [];
        cart.push(product);
        localStorage.setItem('cart', JSON.stringify(cart));

        alert('Sản phẩm đã được thêm vào giỏ hàng!');
    }*@
});


</script>

